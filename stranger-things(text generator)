{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"stranger-things(text generator)","provenance":[],"authorship_tag":"ABX9TyPZzq4hT9jzpI8DMV8vwptc"},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"id":"stF4Haove2Sr","colab_type":"code","outputId":"3a502c88-625c-4097-b995-1ec87342a9f9","executionInfo":{"status":"ok","timestamp":1579674307121,"user_tz":-330,"elapsed":3543,"user":{"displayName":"vijay pormannan","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBNal-duDBHnfLsSMD-XDVAyPBl2AfgL1Jq1NTo=s64","userId":"18351734674386562427"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["!git clone https://github.com/vijaypor2002/sentiment_classification.git"],"execution_count":1,"outputs":[{"output_type":"stream","text":["fatal: destination path 'sentiment_classification' already exists and is not an empty directory.\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"_77RQGbefO4G","colab_type":"code","outputId":"766acf54-e3f4-4517-d431-c33dd60f5493","executionInfo":{"status":"ok","timestamp":1579674310764,"user_tz":-330,"elapsed":7161,"user":{"displayName":"vijay pormannan","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBNal-duDBHnfLsSMD-XDVAyPBl2AfgL1Jq1NTo=s64","userId":"18351734674386562427"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["pip install patool"],"execution_count":2,"outputs":[{"output_type":"stream","text":["Requirement already satisfied: patool in /usr/local/lib/python3.6/dist-packages (1.12)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"YKlg1o-KfTtn","colab_type":"code","outputId":"71867f40-307e-4d38-dd3b-f6898db74402","executionInfo":{"status":"error","timestamp":1579674310780,"user_tz":-330,"elapsed":7160,"user":{"displayName":"vijay pormannan","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBNal-duDBHnfLsSMD-XDVAyPBl2AfgL1Jq1NTo=s64","userId":"18351734674386562427"}},"colab":{"base_uri":"https://localhost:8080/","height":390}},"source":["import patoolib\n","patoolib.extract_archive(\"/content/sentiment_classification/compress-stranger.rar\", outdir=\"/content/sentiment_classification/chat\")"],"execution_count":3,"outputs":[{"output_type":"stream","text":["patool: Extracting /content/sentiment_classification/compress-stranger.rar ...\n","patool: running /usr/bin/unrar x -- /content/sentiment_classification/compress-stranger.rar\n","patool:     with cwd='/content/sentiment_classification/chat'\n"],"name":"stdout"},{"output_type":"error","ename":"PatoolError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mPatoolError\u001b[0m                               Traceback (most recent call last)","\u001b[0;32m<ipython-input-3-57faac723866>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mpatoolib\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mpatoolib\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mextract_archive\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"/content/sentiment_classification/compress-stranger.rar\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0moutdir\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"/content/sentiment_classification/chat\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/patoolib/__init__.py\u001b[0m in \u001b[0;36mextract_archive\u001b[0;34m(archive, verbosity, outdir, program, interactive)\u001b[0m\n\u001b[1;32m    682\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mverbosity\u001b[0m \u001b[0;34m>=\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    683\u001b[0m         \u001b[0mutil\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlog_info\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Extracting %s ...\"\u001b[0m \u001b[0;34m%\u001b[0m \u001b[0marchive\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 684\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0m_extract_archive\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0marchive\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mverbosity\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mverbosity\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minteractive\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0minteractive\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0moutdir\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0moutdir\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mprogram\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mprogram\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    685\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    686\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/patoolib/__init__.py\u001b[0m in \u001b[0;36m_extract_archive\u001b[0;34m(archive, verbosity, interactive, outdir, program, format, compression)\u001b[0m\n\u001b[1;32m    482\u001b[0m             \u001b[0;31m# already handled the command (eg. when it's a builtin Python\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    483\u001b[0m             \u001b[0;31m# function)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 484\u001b[0;31m             \u001b[0mrun_archive_cmdlist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcmdlist\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mverbosity\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mverbosity\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    485\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mdo_cleanup_outdir\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    486\u001b[0m             \u001b[0mtarget\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmsg\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcleanup_outdir\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0moutdir\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0marchive\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/patoolib/__init__.py\u001b[0m in \u001b[0;36mrun_archive_cmdlist\u001b[0;34m(archive_cmdlist, verbosity)\u001b[0m\n\u001b[1;32m    419\u001b[0m     \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    420\u001b[0m         \u001b[0mcmdlist\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mrunkwargs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0marchive_cmdlist\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m{\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 421\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0mutil\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrun_checked\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcmdlist\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mverbosity\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mverbosity\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mrunkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    422\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    423\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/patoolib/util.py\u001b[0m in \u001b[0;36mrun_checked\u001b[0;34m(cmd, ret_ok, **kwargs)\u001b[0m\n\u001b[1;32m    225\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mretcode\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mret_ok\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    226\u001b[0m         \u001b[0mmsg\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"Command `%s' returned non-zero exit status %d\"\u001b[0m \u001b[0;34m%\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mcmd\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mretcode\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 227\u001b[0;31m         \u001b[0;32mraise\u001b[0m \u001b[0mPatoolError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmsg\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    228\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0mretcode\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    229\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mPatoolError\u001b[0m: Command `['/usr/bin/unrar', 'x', '--', '/content/sentiment_classification/compress-stranger.rar']' returned non-zero exit status 255"]}]},{"cell_type":"code","metadata":{"id":"Uh0akX_Gf3Al","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":50},"outputId":"3747f51f-3e81-4363-c662-92a54e561e72","executionInfo":{"status":"ok","timestamp":1579674358659,"user_tz":-330,"elapsed":8252,"user":{"displayName":"vijay pormannan","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBNal-duDBHnfLsSMD-XDVAyPBl2AfgL1Jq1NTo=s64","userId":"18351734674386562427"}}},"source":["from __future__ import absolute_import, division, print_function, unicode_literals\n","try:\n","  # %tensorflow_version only exists in Colab.\n","  %tensorflow_version 2.x\n","except Exception:\n","  pass\n","import tensorflow as tf\n","import os\n","import numpy as np\n","import re\n","import collections\n","from keras.models import Model,Sequential\n","from keras.preprocessing.text import Tokenizer\n","from keras.preprocessing.sequence import pad_sequences\n","from keras.layers import GRU,Input,Dense,TimeDistributed,Activation,RepeatVector,Bidirectional,Dropout,LSTM\n","from keras.layers.embeddings import Embedding\n","from keras.optimizers import Adam\n","from keras.losses import sparse_categorical_crossentropy\n","from keras.callbacks import ModelCheckpoint"],"execution_count":4,"outputs":[{"output_type":"stream","text":["TensorFlow 2.x selected.\n"],"name":"stdout"},{"output_type":"stream","text":["Using TensorFlow backend.\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"BRBQiGaef7li","colab_type":"code","outputId":"4d4953f8-dea7-4480-80e2-4499e04b256c","executionInfo":{"status":"ok","timestamp":1579674360610,"user_tz":-330,"elapsed":917,"user":{"displayName":"vijay pormannan","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBNal-duDBHnfLsSMD-XDVAyPBl2AfgL1Jq1NTo=s64","userId":"18351734674386562427"}},"colab":{"base_uri":"https://localhost:8080/","height":168}},"source":["lines=[]\n","\n","for i in range(1,9):\n","    with open('/content/sentiment_classification/chat/episode{}.txt'.format(i),'r',encoding='utf-8') as f:\n","        line=f.read().split('\\n')\n","\n","    lines.append(line)\n","\n","for i in range(len(lines)):\n","    print('THE NUMBER OF LINES IN {} EPISODE IS {}'.format(i,len(lines[i])))\n","\n","print('THE DIALOG OF 8 EPISODE OF STRANGER THINGS IS LOADED')\n"],"execution_count":5,"outputs":[{"output_type":"stream","text":["THE NUMBER OF LINES IN 0 EPISODE IS 656\n","THE NUMBER OF LINES IN 1 EPISODE IS 700\n","THE NUMBER OF LINES IN 2 EPISODE IS 550\n","THE NUMBER OF LINES IN 3 EPISODE IS 663\n","THE NUMBER OF LINES IN 4 EPISODE IS 670\n","THE NUMBER OF LINES IN 5 EPISODE IS 535\n","THE NUMBER OF LINES IN 6 EPISODE IS 545\n","THE NUMBER OF LINES IN 7 EPISODE IS 623\n","THE DIALOG OF 8 EPISODE OF STRANGER THINGS IS LOADED\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"Lt1ICR7gf7oe","colab_type":"code","colab":{}},"source":["characters=[]\n","\n","for j in range(0,8):\n","  for i in range(len(lines[j])):\n","      for lin in lines[j][i].split():\n","          for l in lin:\n","              characters.extend(l)\n","          characters.extend('\\t')\n","      characters.extend('\\n')\n","\n","vocab=sorted(set(characters))\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"gu3_wchpf7i2","colab_type":"code","colab":{}},"source":["char2no = {u:i for i,u in enumerate(vocab)}\n","idx2char = np.array(vocab)\n","\n","txt_as_int=[char2no[i] for i in characters]\n","txt_as_int=np.array(txt_as_int)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"HVlUHFXAgQPm","colab_type":"code","colab":{}},"source":["seq_length = 50\n","\n","char_dataset = tf.data.Dataset.from_tensor_slices(txt_as_int)\n","sequences = char_dataset.batch(seq_length+1, drop_remainder=True)\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"gBAN-Wj4gQZv","colab_type":"code","colab":{}},"source":["def split_input_target(chunk):\n","    input_text = chunk[:-1]\n","    target_text = chunk[1:]\n","    return input_text, target_text\n","\n","dataset = sequences.map(split_input_target)\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"22ztGTi3gQf0","colab_type":"code","colab":{}},"source":["BATCH_SIZE = 64\n","BUFFER_SIZE = 10000\n","dataset = dataset.shuffle(BUFFER_SIZE).batch(BATCH_SIZE, drop_remainder=True)\n","vocab_size = len(vocab)\n","embedding_dim = 256\n","rnn_units = 1024"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"5XAyGzOdgQd6","colab_type":"code","colab":{}},"source":["def build_model(vocab_size, embedding_dim, rnn_units, batch_size):\n","  model = tf.keras.Sequential([\n","    tf.keras.layers.Embedding(vocab_size, embedding_dim,\n","                              batch_input_shape=[batch_size, None]),\n","    tf.keras.layers.GRU(rnn_units,\n","                        return_sequences=True,\n","                        stateful=True,\n","                        recurrent_initializer='glorot_uniform'),\n","    tf.keras.layers.Dense(vocab_size)\n","  ])\n","  return model\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"Ep0hMcbvgo9l","colab_type":"code","colab":{}},"source":["model = build_model(\n","  vocab_size = len(vocab),\n","  embedding_dim=embedding_dim,\n","  rnn_units=rnn_units,\n","  batch_size=BATCH_SIZE)\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"c0UzfosogpBm","colab_type":"code","outputId":"39a154e8-f87b-4273-9090-894cbacae17f","executionInfo":{"status":"ok","timestamp":1579674597536,"user_tz":-330,"elapsed":1629,"user":{"displayName":"vijay pormannan","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBNal-duDBHnfLsSMD-XDVAyPBl2AfgL1Jq1NTo=s64","userId":"18351734674386562427"}},"colab":{"base_uri":"https://localhost:8080/","height":252}},"source":["model.summary()\n"],"execution_count":29,"outputs":[{"output_type":"stream","text":["Model: \"sequential_2\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","embedding_2 (Embedding)      (64, None, 256)           19712     \n","_________________________________________________________________\n","gru_2 (GRU)                  (64, None, 1024)          3938304   \n","_________________________________________________________________\n","dense_2 (Dense)              (64, None, 77)            78925     \n","=================================================================\n","Total params: 4,036,941\n","Trainable params: 4,036,941\n","Non-trainable params: 0\n","_________________________________________________________________\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"w_M_KF6bguzg","colab_type":"code","colab":{}},"source":["def loss(labels, logits):\n","  return tf.keras.losses.sparse_categorical_crossentropy(labels, logits, from_logits=True)\n","\n","model.compile(optimizer='adam', loss=loss)\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"yj41YrZVgu-h","colab_type":"code","colab":{}},"source":["checkpoint_dir='/content/sentiment_classification/check_pt2/'\n","checkpoint_prefix = os.path.join(checkpoint_dir, \"ckpt_{epoch}\")\n","\n","checkpoint_callback=tf.keras.callbacks.ModelCheckpoint(\n","    filepath=checkpoint_prefix,\n","    save_weights_only=True)\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"EVibSb-XgvCW","colab_type":"code","outputId":"b87731f0-3bbf-4e7d-b4ad-d2e646c565d2","executionInfo":{"status":"ok","timestamp":1579674706823,"user_tz":-330,"elapsed":95661,"user":{"displayName":"vijay pormannan","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBNal-duDBHnfLsSMD-XDVAyPBl2AfgL1Jq1NTo=s64","userId":"18351734674386562427"}},"colab":{"base_uri":"https://localhost:8080/","height":1000}},"source":["EPOCHS=50\n","\n","history = model.fit(dataset, epochs=EPOCHS, callbacks=[checkpoint_callback])\n"],"execution_count":32,"outputs":[{"output_type":"stream","text":["Train for 47 steps\n","Epoch 1/50\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.iter\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.beta_1\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.beta_2\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.decay\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.learning_rate\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer's state 'm' for (root).layer_with_weights-0.embeddings\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer's state 'm' for (root).layer_with_weights-2.kernel\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer's state 'm' for (root).layer_with_weights-2.bias\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer's state 'm' for (root).layer_with_weights-1.cell.kernel\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer's state 'm' for (root).layer_with_weights-1.cell.recurrent_kernel\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer's state 'm' for (root).layer_with_weights-1.cell.bias\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer's state 'v' for (root).layer_with_weights-0.embeddings\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer's state 'v' for (root).layer_with_weights-2.kernel\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer's state 'v' for (root).layer_with_weights-2.bias\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer's state 'v' for (root).layer_with_weights-1.cell.kernel\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer's state 'v' for (root).layer_with_weights-1.cell.recurrent_kernel\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer's state 'v' for (root).layer_with_weights-1.cell.bias\n","WARNING:tensorflow:A checkpoint was restored (e.g. tf.train.Checkpoint.restore or tf.keras.Model.load_weights) but not all checkpointed values were used. See above for specific issues. Use expect_partial() on the load status object, e.g. tf.train.Checkpoint.restore(...).expect_partial(), to silence these warnings, or use assert_consumed() to make the check explicit. See https://www.tensorflow.org/guide/checkpoint#loading_mechanics for details.\n","47/47 [==============================] - 3s 63ms/step - loss: 3.5877\n","Epoch 2/50\n","47/47 [==============================] - 2s 38ms/step - loss: 2.4042\n","Epoch 3/50\n","47/47 [==============================] - 2s 37ms/step - loss: 2.1512\n","Epoch 4/50\n","47/47 [==============================] - 2s 39ms/step - loss: 2.0249\n","Epoch 5/50\n","47/47 [==============================] - 2s 39ms/step - loss: 1.9099\n","Epoch 6/50\n","47/47 [==============================] - 2s 39ms/step - loss: 1.8112\n","Epoch 7/50\n","47/47 [==============================] - 2s 38ms/step - loss: 1.7193\n","Epoch 8/50\n","47/47 [==============================] - 2s 38ms/step - loss: 1.6402\n","Epoch 9/50\n","47/47 [==============================] - 2s 40ms/step - loss: 1.5635\n","Epoch 10/50\n","47/47 [==============================] - 2s 39ms/step - loss: 1.4971\n","Epoch 11/50\n","47/47 [==============================] - 2s 38ms/step - loss: 1.4337\n","Epoch 12/50\n","47/47 [==============================] - 2s 39ms/step - loss: 1.3812\n","Epoch 13/50\n","47/47 [==============================] - 2s 39ms/step - loss: 1.3233\n","Epoch 14/50\n","47/47 [==============================] - 2s 39ms/step - loss: 1.2722\n","Epoch 15/50\n","47/47 [==============================] - 2s 40ms/step - loss: 1.2222\n","Epoch 16/50\n","47/47 [==============================] - 2s 39ms/step - loss: 1.1743\n","Epoch 17/50\n","47/47 [==============================] - 2s 41ms/step - loss: 1.1268\n","Epoch 18/50\n","47/47 [==============================] - 2s 39ms/step - loss: 1.0798\n","Epoch 19/50\n","47/47 [==============================] - 2s 41ms/step - loss: 1.0288\n","Epoch 20/50\n","47/47 [==============================] - 2s 40ms/step - loss: 0.9799\n","Epoch 21/50\n","47/47 [==============================] - 2s 40ms/step - loss: 0.9306\n","Epoch 22/50\n","47/47 [==============================] - 2s 41ms/step - loss: 0.8804\n","Epoch 23/50\n","47/47 [==============================] - 2s 39ms/step - loss: 0.8343\n","Epoch 24/50\n","47/47 [==============================] - 2s 40ms/step - loss: 0.7827\n","Epoch 25/50\n","47/47 [==============================] - 2s 39ms/step - loss: 0.7372\n","Epoch 26/50\n","47/47 [==============================] - 2s 40ms/step - loss: 0.6939\n","Epoch 27/50\n","47/47 [==============================] - 2s 40ms/step - loss: 0.6489\n","Epoch 28/50\n","47/47 [==============================] - 2s 39ms/step - loss: 0.6122\n","Epoch 29/50\n","47/47 [==============================] - 2s 41ms/step - loss: 0.5741\n","Epoch 30/50\n","47/47 [==============================] - 2s 40ms/step - loss: 0.5395\n","Epoch 31/50\n","47/47 [==============================] - 2s 40ms/step - loss: 0.5111\n","Epoch 32/50\n","47/47 [==============================] - 2s 42ms/step - loss: 0.4848\n","Epoch 33/50\n","47/47 [==============================] - 2s 40ms/step - loss: 0.4659\n","Epoch 34/50\n","47/47 [==============================] - 2s 40ms/step - loss: 0.4428\n","Epoch 35/50\n","47/47 [==============================] - 2s 41ms/step - loss: 0.4302\n","Epoch 36/50\n","47/47 [==============================] - 2s 41ms/step - loss: 0.4136\n","Epoch 37/50\n","47/47 [==============================] - 2s 40ms/step - loss: 0.4039\n","Epoch 38/50\n","47/47 [==============================] - 2s 41ms/step - loss: 0.3931\n","Epoch 39/50\n","47/47 [==============================] - 2s 42ms/step - loss: 0.3821\n","Epoch 40/50\n","47/47 [==============================] - 2s 40ms/step - loss: 0.3734\n","Epoch 41/50\n","47/47 [==============================] - 2s 41ms/step - loss: 0.3656\n","Epoch 42/50\n","47/47 [==============================] - 2s 40ms/step - loss: 0.3573\n","Epoch 43/50\n","47/47 [==============================] - 2s 40ms/step - loss: 0.3496\n","Epoch 44/50\n","47/47 [==============================] - 2s 41ms/step - loss: 0.3443\n","Epoch 45/50\n","47/47 [==============================] - 2s 39ms/step - loss: 0.3393\n","Epoch 46/50\n","47/47 [==============================] - 2s 41ms/step - loss: 0.3361\n","Epoch 47/50\n","47/47 [==============================] - 2s 40ms/step - loss: 0.3305\n","Epoch 48/50\n","47/47 [==============================] - 2s 39ms/step - loss: 0.3246\n","Epoch 49/50\n","47/47 [==============================] - 2s 41ms/step - loss: 0.3226\n","Epoch 50/50\n","47/47 [==============================] - 2s 40ms/step - loss: 0.3191\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"rbUn_84YuiMk","colab_type":"code","colab":{}},"source":["def generate_text(model, start_string):\n","  num_generate = 1000\n","  input_eval = [char2no[s] for s in start_string]\n","  input_eval = tf.expand_dims(input_eval, 0)\n","  text_generated = []\n","  temperature = 1.0\n","  model.reset_states()\n","  for i in range(num_generate):\n","      predictions = model(input_eval)\n","      predictions = tf.squeeze(predictions, 0)\n","      predictions = predictions / temperature\n","      predicted_id = tf.random.categorical(predictions, num_samples=1)[-1,0].numpy()\n","      input_eval = tf.expand_dims([predicted_id], 0)\n","      text_generated.append(idx2char[predicted_id])\n","  return (start_string + ''.join(text_generated))"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"zqbRwJx2hG6j","colab_type":"code","outputId":"cd8074c1-ab42-4ad4-fc8c-7f7bf8ac6a12","executionInfo":{"status":"ok","timestamp":1579674713885,"user_tz":-330,"elapsed":1530,"user":{"displayName":"vijay pormannan","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBNal-duDBHnfLsSMD-XDVAyPBl2AfgL1Jq1NTo=s64","userId":"18351734674386562427"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["tf.train.latest_checkpoint(checkpoint_dir)"],"execution_count":34,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'/content/sentiment_classification/check_pt2/ckpt_50'"]},"metadata":{"tags":[]},"execution_count":34}]},{"cell_type":"code","metadata":{"id":"St4nKJKmhHFl","colab_type":"code","colab":{}},"source":["model = build_model(vocab_size, embedding_dim, rnn_units, batch_size=1)\n","model.load_weights(tf.train.latest_checkpoint(checkpoint_dir))\n","model.build(tf.TensorShape([1, None]))"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"m-OXsXLkhbKM","colab_type":"code","colab":{}},"source":["model.summary()"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"Dc2P5eLvhnwZ","colab_type":"code","outputId":"c3bc46b1-4e25-4af0-d73d-618a942300b0","executionInfo":{"status":"ok","timestamp":1579674884185,"user_tz":-330,"elapsed":6599,"user":{"displayName":"vijay pormannan","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBNal-duDBHnfLsSMD-XDVAyPBl2AfgL1Jq1NTo=s64","userId":"18351734674386562427"}},"colab":{"base_uri":"https://localhost:8080/","height":588}},"source":["print(generate_text(model, start_string=u\"what\"))"],"execution_count":40,"outputs":[{"output_type":"stream","text":["what\twas\tin\tthat\twater?\t\n","I\tdon't\tknow.\t\n","The\tbath.\t\n","Oh,\the's\tgoing\tto\tcook\tfor\ther\tagain.\t\n","Why\twould\tdess\ther\tminute.\t-\tYeah?\t\n","Upsed.\t\n","Oh,\tthank\tyou,\ttoo.\t\n","Oh,\tthank\tyou,\tswallow\tus\twhere\tthe\tgate\thas\ta\treal\tHow\tfor\tyour\tblood.\t\n","What?\t\n","Blood.\t\n","Her\thair.\t\n","What\tdid\tyou\tsaw\ther,\ttoo?\t\n","I\ttold\tyou\tthis\ta\tthousand\ttimes.\t\n","What\tdid\tshe\telse\tlast\tnight.\t\n","No,\tnot\tlater.\t-\tWhere's\tWill?\t\n","Oh,\tthat's\tfunny?\t\n","Well,\tyou\tjust\treally\ttrying.\t\n","This\tis\tand\t\n","-\tHas\tin\ton\t\"Bad\tlens\tsay\the's\tthy\tit'sin.\t\n","Oh,\tand\tI\tguess\tI\tshouldn't\treally\tbe\tsurprised.\t\n","A\tbaby\tthe\tthe\tsamell...\t\n","could\tGod\ttake\tfrom\tus\tup\twhat\tI'm\tsaying.\t\n","You\tknow,\tyou're\tso\tcute\tway,\tcome\ton!\t\n","Out\tof\tthe\tway!\t\n","-\tMaybe\tI'll\ttell\ther...\t\n","what'd\the\tlook\tll,\tus,\tshe\twas\tcoming\tfor\tyou.\t\n","Just\tlike\tin\tyour\tbathtub.\t\n","You're\tasking\tfor\tmy\tthis\tthing\t\n","Yeah,\taccipst\tthe\tuniverst,\twanted\tto\tsabotage\tour\tmission.\t\n","Because\tshe's\there\tyou\tgo\tto\thours.\t\n","Aru\tyou\tokay?\t\n","Yeah,\tI\theard\ta\tbaby.\t\n","So\tthat's\twe\tspeak\tto\thim.\t\n","-\tListen?\tListen,\tthis\tis\tcalled\tstalking\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"dYp-6jcp9rNR","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":121},"outputId":"c2c1306e-a56f-4a73-ceb5-3b7188efe8cf","executionInfo":{"status":"ok","timestamp":1579674983098,"user_tz":-330,"elapsed":39022,"user":{"displayName":"vijay pormannan","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBNal-duDBHnfLsSMD-XDVAyPBl2AfgL1Jq1NTo=s64","userId":"18351734674386562427"}}},"source":["from google.colab import drive\n","drive.mount('/content/drive')"],"execution_count":41,"outputs":[{"output_type":"stream","text":["Go to this URL in a browser: https://accounts.google.com/o/oauth2/auth?client_id=947318989803-6bn6qk8qdgf4n4g3pfee6491hc0brc4i.apps.googleusercontent.com&redirect_uri=urn%3aietf%3awg%3aoauth%3a2.0%3aoob&response_type=code&scope=email%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdocs.test%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdrive%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdrive.photos.readonly%20https%3a%2f%2fwww.googleapis.com%2fauth%2fpeopleapi.readonly\n","\n","Enter your authorization code:\n","··········\n","Mounted at /content/drive\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"PLdcW3o_5QFo","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"17ddb595-bac5-4c34-a232-b0daf59889a7","executionInfo":{"status":"ok","timestamp":1579674772350,"user_tz":-330,"elapsed":1347,"user":{"displayName":"vijay pormannan","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBNal-duDBHnfLsSMD-XDVAyPBl2AfgL1Jq1NTo=s64","userId":"18351734674386562427"}}},"source":["tf.executing_eagerly()"],"execution_count":37,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{"tags":[]},"execution_count":37}]}]}